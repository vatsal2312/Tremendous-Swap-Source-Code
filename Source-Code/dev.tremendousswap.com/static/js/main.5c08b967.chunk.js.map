{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/hooks.ts","state/actions.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","config/constants/contracts.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/layout/Container.tsx","components/layout/Page.tsx","utils/multicall.ts","contexts/BlockContext.tsx","config/constants/pools.ts","utils/addressHelpers.ts","config/constants/types.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","config/constants/nfts.ts","views/Nft/components/NftGlobalNotification.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","utils/web3.ts","contexts/Localisation/translationsContext.ts"],"names":["fetchFswapPriceOnBabySwap","a","calls","address","fswapAddress","name","params","lpAddress","busdAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","tokenDecimals","quoteTokenDecimals","fswapPrice","BigNumber","div","pow","fetchFarms","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","tokenAddresses","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","lpTokenBalanceMC","lpTotalSupply","tokenAmount","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","quoteTokenPrice","pid","fetch","response","json","priceData","data","price","lpTokenPrice","masterchefABI","info","totalAllocPoint","fswapPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","harvestInterval","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","ZERO","useFetchPublicData","useDispatch","slowRefresh","useRefresh","useEffect","fetchPoolsPublicDataAsync","useFarms","useSelector","useFarmFromPid","useFarmUser","usePools","fastRefresh","fetchPoolsUserDataAsync","pools","useFegPrice","fegPrice","useQuaPrice","quaPrice","usePriceBnbBusd","usePriceCakeBusd","useTotalValue","bnbPrice","cakePrice","value","i","length","val","BNB","FSWAP","plus","pool","totalStaked","stakingTokenFarm","s","stakingTokenName","stakingTokenPriceInUsd","poolCategory","PoolCategory","BINANCE","stakingTokenDecimals","nodes","process","getNodeUrl","randomIndex","random","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","useContext","cake","56","97","masterChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","usdt","fswap","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","TranslationsContext","Container","styled","theme","mediaQueries","sm","Page","lg","abi","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","sousId","tokenName","stakingTokenAddress","contractAddress","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","getCakeAddress","addresses","chainId","getLotteryAddress","getLotteryTicketAddress","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","filter","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsFee","callsDepositFee","fees","depositFee","fetchPoolsStakeLimit","callsStakeLimit","stakeLimits","limitPerUser","stakeLimit","fetchPoolsTotalStatking","oldPools","newPools","callsOldPools","callsNewPools","cakeABI","oldPoolsTotalStaked","newPoolsTotalStaked","fetchFegPrice","fetchQuaPrice","nonBnbPools","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","reduce","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingFSwap","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","contracts","USDT","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","console","log","then","r","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","setIsDark","prevState","JSON","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","initialOpenState","items","Menu","props","useWallet","connect","reset","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","rugDocLink","Wrapper","PageLoader","RABBIT_MINTING_FARM_ADDRESS","ModalContent","Actions","NftYouWonModal","onDismiss","TranslateString","title","src","alt","style","height","marginBottom","size","color","as","NftGlobalNotification","useModal","onPresentBurnModal","showModal","checkNftStatus","rabbitmintingfarm","totalSupplyDistributedArr","currentDistributedSupplyArr","canClaimArr","hasClaimedArr","totalSupplyDistributed","currentDistributedSupply","canClaim","hasClaimed","lt","document","location","Home","lazy","Farms","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","path","exact","tokenMode","component","memo","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","getRpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","getContract","contractOptions","defaultTranslationState"],"mappings":"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","file":"static/js/main.5c08b967.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { QuoteToken } from '../../config/constants/types'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nconst fetchFswapPriceOnBabySwap = async () => {\r\n  const fswapAddress = '0xd22246644d2BE5d0427a8E474477d96677C3eC24'\r\n  const busdAddress = '0xe9e7cea3dedca5984780bafc599bd69add087d56'  \r\n  const lpAddress = '0xCBb876Fe106B937D486f5BDF4b32Df4e50153541'    // FSWAP-BUSD\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: fswapAddress,\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: busdAddress,\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: fswapAddress,\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: busdAddress,\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [\r\n    tokenBalanceLP,\r\n    quoteTokenBlanceLP,\r\n    tokenDecimals,\r\n    quoteTokenDecimals\r\n  ] = await multicall(erc20, calls)\r\n\r\n  const fswapPrice = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(10).pow(quoteTokenDecimals))\r\n            .div(new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)));\r\n\r\n  return fswapPrice\r\n}\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of quote token on LP contract\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\r\n          name: 'balanceOf',\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAdress,\r\n          name: 'totalSupply',\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n        // Quote token decimals\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n      ]\r\n\r\n      const [\r\n        tokenBalanceLP,\r\n        quoteTokenBlanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals\r\n      ] = await multicall(erc20, calls)\r\n\r\n      let tokenAmount;\r\n      let lpTotalInQuoteToken;\r\n      let tokenPriceVsQuote;\r\n      if (farmConfig.isTokenOnly) {\r\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\r\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\r\n          tokenPriceVsQuote = new BigNumber(1);\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(10).pow(quoteTokenDecimals))\r\n            .div(new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)));\r\n        }\r\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\r\n      } else {\r\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n        // Total value in staking in quote token value\r\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n          .times(new BigNumber(2))\r\n          .times(lpTokenRatio)\r\n\r\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\r\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n          .times(lpTokenRatio)\r\n\r\n        if (tokenAmount.comparedTo(0) > 0) {\r\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(10).pow(quoteTokenDecimals))\r\n            .div(new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)));\r\n        }\r\n      }\r\n\r\n      let quoteTokenPrice = new BigNumber(0)\r\n      if (farmConfig.pid === 31) {    // BABY-FSWAP BABY LP\r\n        quoteTokenPrice = await fetchFswapPriceOnBabySwap()\r\n      } else {\r\n        const response = await fetch(`https://api.pancakeswap.info/api/v2/tokens/${farmConfig.quoteTokenAdresses[CHAIN_ID]}`)\r\n        const priceData = await response.json()\r\n        quoteTokenPrice = new BigNumber(priceData?.data?.price || 1)\r\n      }\r\n      \r\n      let lpTokenPrice = new BigNumber(0)\r\n      if (farmConfig.isTokenOnly) {\r\n        lpTokenPrice = tokenPriceVsQuote.times(quoteTokenPrice)\r\n      } else {\r\n        lpTokenPrice = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(10).pow(quoteTokenDecimals)).times(new BigNumber(2))\r\n          .times(quoteTokenPrice)\r\n          .div(new BigNumber(lpTotalSupply).div(new BigNumber(10).pow(18)))\r\n      }\r\n\r\n      const [info, totalAllocPoint, fswapPerBlock] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'fswapPerBlock',\r\n        },\r\n      ])\r\n\r\n      const allocPoint = new BigNumber(info.allocPoint._hex)\r\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        // quoteTokenAmount: quoteTokenAmount,\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\r\n        quoteTokenPrice: quoteTokenPrice.toJSON(),\r\n        lpTokenPrice: lpTokenPrice.toJSON(),\r\n        poolWeight: poolWeight.toNumber(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        depositFeeBP: info.depositFeeBP,\r\n        harvestInterval: new BigNumber(info.harvestInterval._hex).toNumber(),\r\n        fswapPerBlock: new BigNumber(fswapPerBlock).toNumber(),\r\n        tokenDecimals,\r\n        quoteTokenDecimals\r\n      }\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'pendingFSwap',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport fetchFarms from './fetchFarms'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst initialState: FarmsState = { data: [...farmsConfig] }\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms()\r\n  dispatch(setFarmsPublicData(farms))\r\n}\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\r\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\r\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\r\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\r\n    return {\r\n      index,\r\n      allowance: userFarmAllowances[index],\r\n      tokenBalance: userFarmTokenBalances[index],\r\n      stakedBalance: userStakedBalances[index],\r\n      earnings: userFarmEarnings[index],\r\n    }\r\n  })\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\r\n}\r\n\r\nexport default farmsSlice.reducer\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\r\nimport { State, Farm, Pool } from './types'\r\nimport { PoolCategory, QuoteToken } from '../config/constants/types'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolsPublic = (): Pool[] => {\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\nexport const useFegPrice = (): number => {\r\n  const fegPrice = useSelector((state: State) => state.pools.fegPrice)\r\n  return fegPrice\r\n}\r\n\r\nexport const useQuaPrice = (): number => {\r\n  const quaPrice = useSelector((state: State) => state.pools.quaPrice)\r\n  return quaPrice\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 4 // BUSD-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  // const pid = 1 // CAKE-BNB LP\r\n  // const bnbPriceUSD = usePriceBnbBusd()\r\n  // const farm = useFarmFromPid(pid)\r\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n  const pid = 0; // EGG-BUSD LP\r\n  const farm = useFarmFromPid(pid);\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms();\r\n  const pools = usePoolsPublic()\r\n  const bnbPrice = usePriceBnbBusd();\r\n  const cakePrice = usePriceCakeBusd();\r\n  let value = new BigNumber(0);\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken) {\r\n      let val;\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.FSWAP) {\r\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\r\n      } else {\r\n        val = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPrice);\r\n      }\r\n      value = value.plus(val);\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < pools.length; i++) {\r\n    const pool = pools[i]\r\n    if (pool.totalStaked) {\r\n      const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName\r\n        || `${s.tokenSymbol}-${s.quoteTokenSymbol}` === pool.stakingTokenName)\r\n      const stakingTokenPriceInUsd = pool.poolCategory === PoolCategory.BINANCE ? new BigNumber(1)\r\n        : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote).times(stakingTokenFarm?.quoteTokenPrice)\r\n      value = value.plus(new BigNumber(pool.totalStaked).div(new BigNumber(10).pow(pool.stakingTokenDecimals)).times(stakingTokenPriceInUsd))\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","export default {\r\n  cake: {\r\n    56: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    97: '',\r\n  },\r\n  masterChef: {\r\n    56: '0x7Df83cd8CA76D89A69f3aB30aA11295a3F502488',\r\n    97: '',\r\n  },\r\n  wbnb: {\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    97: '',\r\n  },\r\n  lottery: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  lotteryNFT: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\r\n  },\r\n  busd: {\r\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n    97: '',\r\n  },\r\n  usdt: {\r\n    56: '0x55d398326f99059ff775485246999027b3197955',\r\n    97: '',\r\n  },\r\n  fswap: {\r\n    56: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    97: '',\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\r\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[0]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\r\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\r\n// @see https://reactjs.org/docs/hooks-rules.html\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return fallback\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\nimport { getTranslation } from '../utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst BlockContext = React.createContext(0)\r\n\r\nconst BlockContextProvider = ({ children }) => {\r\n  const previousBlock = useRef(0)\r\n  const [block, setBlock] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      if (blockNumber !== previousBlock.current) {\r\n        previousBlock.current = blockNumber\r\n        setBlock(blockNumber)\r\n      }\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\r\n}\r\n\r\nexport { BlockContext, BlockContextProvider }\r\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 1,\r\n    tokenName: 'DOGE',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe6164b5904e4ED8cc30F3FE49055055814f46CE8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://dogecoin.com',\r\n    harvest: true,\r\n    tokenPerBlock: '0.6',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 8,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 2,\r\n    tokenName: 'DOGE',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf6697F2cDE68c03E577De57F058EB17C9dDdfA5F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://dogecoin.com',\r\n    harvest: true,\r\n    tokenPerBlock: '0.0347',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 8,\r\n    stakingTokenDecimals: 18\r\n  },\r\n\r\n  {\r\n    sousId: 3,\r\n    tokenName: 'FEG',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xA23EdC0B62e3c633024394c6CB35BAeA191838f9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://fegtoken.com',\r\n    harvest: true,\r\n    tokenPerBlock: '575711.87630762',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 9,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 4,\r\n    tokenName: 'QUA',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xE0560963688060a3C84d0CC2B8762B43eCEdafDD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'http://thequa.finance',\r\n    harvest: true,\r\n    tokenPerBlock: '4.5',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 9,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 5,\r\n    tokenName: 'GEM',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x90a16b6Ae66f480FF68FE0eA5b8b26F25A35EF03',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://www.nftmall.io/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.004',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 6,\r\n    tokenName: 'VDV',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2cdd78dee50cd4c844b5cab9fc61bc6f96c4e947',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://vdvtoken.io/',\r\n    harvest: true,\r\n    tokenPerBlock: '3.6',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 8,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 7,\r\n    tokenName: 'BABY',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x973613A8D1B4D4507c6583dE2C8D3D248A4d5E92',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://home.babyswap.finance',\r\n    harvest: true,\r\n    tokenPerBlock: '0.0033',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 8,\r\n    tokenName: 'CAKE',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8c984D4eF008acf291d9F68CD814e0C65F080dEb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://pancakeswap.finance',\r\n    harvest: true,\r\n    tokenPerBlock: '0.00008',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 9,\r\n    tokenName: 'BLAST',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0c229187Deee601391Da70CcFBca51D603Fd49ad',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://www.blastoff.finance/farms',\r\n    harvest: true,\r\n    tokenPerBlock: '2.2',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 9,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 10,\r\n    tokenName: 'BREW',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9D16dD2641397bcf0550D95E1aFBA4F8442B23c4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://cafeswap.finance',\r\n    harvest: true,\r\n    tokenPerBlock: '0.0032',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 11,\r\n    tokenName: 'FG',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xcbaf5278939eCDe839A317D2e0C0eF082915E6F7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://farmageddon.farm',\r\n    harvest: true,\r\n    tokenPerBlock: '30000000',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 9,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 12,\r\n    tokenName: 'BALPAC',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x779fDAAe3666122955a65c6bD36aB496FEf14149',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://alpaca.baby/',\r\n    harvest: true,\r\n    tokenPerBlock: '58',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 13,\r\n    tokenName: 'FSWAP',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xfE382bf1028f0589Cd679440D0dAAA50e4529630',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://dev.tremendousswap.com',\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 14,\r\n    tokenName: 'GAME1',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6BBCD095BA73188765387bcBca87857B8e650EA0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'http://www.game1network.com',\r\n    harvest: true,\r\n    tokenPerBlock: '0.1',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 15,\r\n    tokenName: 'SEACHAIN',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBB9164ae7Fe4d44e4aF2bEF77B18A8251464c36F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'http://Seachaintoken.com',\r\n    harvest: true,\r\n    tokenPerBlock: '1071.99',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 9,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 16,\r\n    tokenName: 'CHY',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0faa11209EbB4e6113C0E30d9b1838322803369F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'http://Greenhouseswap.finance',\r\n    harvest: true,\r\n    tokenPerBlock: '0.000183',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 17,\r\n    tokenName: 'IF1',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdb6fDA7Dc9FaaFAb68B0204b32EA6C2671bfF15A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://infiniteone.io/',\r\n    harvest: true,\r\n    tokenPerBlock: '34000',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 9,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 18,\r\n    tokenName: 'QUA',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9629B2881759da8cc06161d74F09b3aB42188D59',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'http://thequa.finance',\r\n    harvest: true,\r\n    tokenPerBlock: '23',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 9,\r\n    stakingTokenDecimals: 18\r\n  },\r\n  {\r\n    sousId: 19,\r\n    tokenName: 'FSWAP',\r\n    stakingTokenName: QuoteToken.FSWAP,\r\n    stakingTokenAddress: '0xd22246644d2be5d0427a8e474477d96677c3ec24',\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2f8eccd3ef4ce383b05b7e881433a9c083d44a2b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://dev.tremendousswap.com',\r\n    harvest: true,\r\n    tokenPerBlock: '0.25',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    stakingTokenDecimals: 18\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import addresses from 'config/constants/contracts'\r\n\r\nconst chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const getCakeAddress = () => {\r\n  return addresses.cake[chainId]\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return addresses.masterChef[chainId]\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return addresses.mulltiCall[chainId]\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return addresses.wbnb[chainId]\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return addresses.lottery[chainId]\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return addresses.lotteryNFT[chainId]\r\n}\r\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  releaseBlockNumber: number\r\n}\r\n\r\nexport enum QuoteToken {\r\n  'BNB' = 'BNB',\r\n  'CAKE' = 'CAKE',\r\n  'SYRUP' = 'SYRUP',\r\n  'BUSD' = 'BUSD',\r\n  'TWT' = 'TWT',\r\n  'UST' = 'UST',\r\n  'USDT' = 'USDT',\r\n  'FSWAP' = 'FSWAP'\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  tokenSymbol: string\r\n  tokenAddresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  quoteTokenAdresses: Address\r\n  tokenDecimals?: number\r\n  quoteTokenDecimals?: number\r\n  multiplier?: string\r\n  isTokenOnly?: boolean\r\n  isCommunity?: boolean\r\n  risk: number\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  image?: string\r\n  tokenName: string\r\n  stakingTokenName: QuoteToken\r\n  stakingLimit?: number\r\n  stakingTokenAddress?: string\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  projectLink: string\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  tokenDecimals: number\r\n  stakingTokenDecimals: number\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  originalImage: string\r\n  previewImage: string\r\n  blurImage: string\r\n  sortOrder: number\r\n  bunnyId: number\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChefNew.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsFee = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsDepositFee = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'depositFee',\r\n    }\r\n  })\r\n\r\n  const fees = await multicall(sousChefABI, callsDepositFee)\r\n  \r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const depositFee = fees[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      depositFee: new BigNumber(depositFee).toNumber(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsStakeLimit = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStakeLimit = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'poolLimitPerUser',\r\n    }\r\n  })\r\n\r\n  const stakeLimits = await multicall(sousChefABI, callsStakeLimit)\r\n  \r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const limitPerUser = stakeLimits[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      stakeLimit: new BigNumber(limitPerUser).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStatking = async () => {\r\n  const oldPools = poolsConfig.filter((p) => p.sousId < 8)\r\n  const newPools = poolsConfig.filter((p) => p.sousId >= 8)\r\n\r\n  const callsOldPools = oldPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.stakingTokenAddress,\r\n      name: 'balanceOf',\r\n      params: [poolConfig.contractAddress[CHAIN_ID]],\r\n    }\r\n  })\r\n\r\n  const callsNewPools = newPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'stakedSupply'\r\n    }\r\n  })\r\n\r\n  const oldPoolsTotalStaked = await multicall(cakeABI, callsOldPools)\r\n  const newPoolsTotalStaked = await multicall(sousChefABI, callsNewPools)\r\n\r\n  return [\r\n    ...oldPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(oldPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...newPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(newPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n\r\nexport const fetchFegPrice = async () => {\r\n  const response = await fetch(`https://api.pancakeswap.info/api/v2/tokens/0xacfc95585d80ab62f67a14c566c1b7a49fe91167`)\r\n  const priceData = await response.json()\r\n  \r\n  return priceData?.data?.price\r\n}\r\n\r\nexport const fetchQuaPrice = async () => {\r\n  const response = await fetch(`https://api.pancakeswap.info/api/v2/tokens/0x21ed4f0669872a55cab53c0d9de65c7e4a7ea2c3`)\r\n  const priceData = await response.json()\r\n  \r\n  return priceData?.data?.price\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChefNew.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'allowance',\r\n    params: [account, p.contractAddress[CHAIN_ID]],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingFSwap('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport BigNumber from 'bignumber.js'\r\nimport { fetchFegPrice, fetchPoolsBlockLimits, fetchPoolsFee, fetchPoolsStakeLimit, fetchPoolsTotalStatking, fetchQuaPrice } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig], fegPrice: 0, quaPrice: 0 }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload.data\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n      state.fegPrice = action.payload.fegPrice || state.fegPrice\r\n      state.quaPrice = action.payload.quaPrice || state.quaPrice\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const fees = await fetchPoolsFee()\r\n  const stakeLimits = await fetchPoolsStakeLimit()\r\n  const totalStakings = await fetchPoolsTotalStatking()\r\n  const fegPrice = await fetchFegPrice()\r\n  const quaPrice = await fetchQuaPrice()\r\n  \r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const depositFee = fees.find((entry) => entry.sousId === pool.sousId)\r\n    const stakeLimit = stakeLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...blockLimit,\r\n      ...depositFee,\r\n      ...stakeLimit,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData({ data: liveData, fegPrice, quaPrice }))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId],\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import contracts from './contracts'\r\nimport { FarmConfig, QuoteToken } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  // Farms\r\n  {\r\n    pid: 0,\r\n    risk: 5,\r\n    lpSymbol: 'FSWAP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c4a2d3d166ddeb946106bed663a8257cb56cc20',\r\n    },\r\n    tokenSymbol: 'FSWAP',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 1,\r\n    risk: 5,\r\n    lpSymbol: 'FSWAP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3f87c4d9472e51c5571b76db73c6f9ef416fc1d1',\r\n    },\r\n    tokenSymbol: 'FSWAP',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    risk: 5,\r\n    lpSymbol: 'FLAT-FSWAP LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x985431d56e2ca27c3e4183bf94b36829a30cd44a',\r\n    },\r\n    tokenSymbol: 'FLAT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x41540ba32db90269bb72a7be1d4b1ee18f5544f1',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.FSWAP,\r\n    quoteTokenAdresses: contracts.cake,\r\n  },\r\n  {\r\n    pid: 3,\r\n    risk: 5,\r\n    lpSymbol: 'FLAT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2afa731fbef65aa4149357e4d6ff8fcca29c1ac8',\r\n    },\r\n    tokenSymbol: 'FLAT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x41540ba32db90269bb72a7be1d4b1ee18f5544f1',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 4,\r\n    risk: 3,\r\n    lpSymbol: 'BNB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    tokenSymbol: 'BNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 5,\r\n    risk: 1,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    tokenSymbol: 'USDT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 6,\r\n    risk: 1,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\r\n    },\r\n    tokenSymbol: 'DAI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 7,\r\n    risk: 1,\r\n    lpSymbol: 'DOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xac109C8025F272414fd9e2faA805a583708A017f',\r\n    },\r\n    tokenSymbol: 'DOGE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 11,\r\n    risk: 1,\r\n    lpSymbol: 'GEM-FSWAP LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x342e6568da1d739d34588dea913e24b134599377',\r\n    },\r\n    tokenSymbol: 'GEM',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xBaC1df744df160877cDc45E13d0394c06bC388Ff',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.FSWAP,\r\n    quoteTokenAdresses: contracts.fswap,\r\n  },\r\n  {\r\n    pid: 12,\r\n    risk: 1,\r\n    lpSymbol: 'GEM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8947c3a24d51e104ddbead2d864efae7920b30e5',\r\n    },\r\n    tokenSymbol: 'GEM',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xBaC1df744df160877cDc45E13d0394c06bC388Ff',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 14,\r\n    risk: 1,\r\n    lpSymbol: 'VDV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5d411b470c5f1f2194dcfb6f6862be4c34787058',\r\n    },\r\n    tokenSymbol: 'VDV',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xe586a0af5f3844f1408fed1d284270827a116010',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 16,\r\n    risk: 1,\r\n    lpSymbol: 'BABY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xad1bfa8b34e6f6e63972d47667712f36061d955b',\r\n    },\r\n    tokenSymbol: 'BABY',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x53E562b9B7E5E94b81f10e96Ee70Ad06df3D2657',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 18,\r\n    risk: 1,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0ed7e52944161450477ee417de9cd3a859b14fd0',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 20,\r\n    risk: 1,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28415ff2c35b65b9e5c7de82126b4015ab9d031f',\r\n    },\r\n    tokenSymbol: 'ADA',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 21,\r\n    risk: 1,\r\n    lpSymbol: 'BLAST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x117faa625b21ad8ee40cfcd88bd0f48b40e37c63',\r\n    },\r\n    tokenSymbol: 'BLAST',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x09044dcfbe25225c0155c793596070c1fa584015',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 22,\r\n    risk: 1,\r\n    lpSymbol: 'BREW-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4d1f8f8e579096097809d439d6707f2f5870652a',\r\n    },\r\n    tokenSymbol: 'BREW',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x790be81c3ca0e53974be2688cdb954732c9862e1',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 24,\r\n    risk: 1,\r\n    lpSymbol: 'VDV-FSWAP LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58A6BF67F6154493204B8b8F0aF7271cB14Ad90D',\r\n    },\r\n    tokenSymbol: 'VDV',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xe586a0af5f3844f1408fed1d284270827a116010',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.FSWAP,\r\n    quoteTokenAdresses: contracts.fswap,\r\n  },\r\n  {\r\n    pid: 25,\r\n    risk: 1,\r\n    lpSymbol: 'DOT-FSWAP LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfaf7083E8F691610AB4fcF15477c0795fC922177',\r\n    },\r\n    tokenSymbol: 'DOT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.FSWAP,\r\n    quoteTokenAdresses: contracts.fswap,\r\n  },\r\n  {\r\n    pid: 26,\r\n    risk: 1,\r\n    lpSymbol: 'FG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x746cdbb1bfbb19e4897aee3a5312de79c40fd5bb',\r\n    },\r\n    tokenSymbol: 'FG',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x4492ca0aff6d603e18aea5075b49a5ff76b9ea06',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 27,\r\n    risk: 1,\r\n    lpSymbol: 'BALPAC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9753ce24d009ad6810b6e51fbf7344bcf0508658',\r\n    },\r\n    tokenSymbol: 'BALPAC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x83DD5794D844BB4bD630c2FAcC45A77729232991',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 28,\r\n    risk: 1,\r\n    lpSymbol: 'BALPAC-FSWAP LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC747FDAd3d98000EA85Ee8C30cbD5B1E8c614202',\r\n    },\r\n    tokenSymbol: 'BALPAC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x83DD5794D844BB4bD630c2FAcC45A77729232991',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.FSWAP,\r\n    quoteTokenAdresses: contracts.fswap,\r\n  },\r\n  {\r\n    pid: 29,\r\n    risk: 1,\r\n    lpSymbol: 'GAME1-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x29e63966792d692ef405d897bd716c30e4e54944',\r\n    },\r\n    tokenSymbol: 'GAME1',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0E52d24c87A5ca4F37E3eE5E16EF5913fb0cCEEB',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.USDT,\r\n    quoteTokenAdresses: contracts.usdt,\r\n  },\r\n  {\r\n    pid: 31,\r\n    risk: 1,\r\n    lpSymbol: 'BABY-FSWAP LP',    // BABY LP\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2ddfB1dca4e940906f83ff2beC791e3207B47c2A',\r\n    },\r\n    tokenSymbol: 'BABY',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x53E562b9B7E5E94b81f10e96Ee70Ad06df3D2657',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.FSWAP,\r\n    quoteTokenAdresses: contracts.fswap,\r\n  },\r\n  {\r\n    pid: 32,\r\n    risk: 1,\r\n    lpSymbol: 'SEACHAIN-BNB LP',    // APE LP\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74b1c9fe9b0cb0a395dc76acb00de288939682a1',\r\n    },\r\n    tokenSymbol: 'SEACHAIN',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x36b24b2f78725495e858af9e72f7df69dade3dca',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 34,\r\n    risk: 1,\r\n    lpSymbol: 'CHY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x62C91836Ec825C3593a40b15fA6a24f555358956',\r\n    },\r\n    tokenSymbol: 'CHY',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8f0697be1d6af7e3415d87d6bad1073e5c6459d2',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 36,\r\n    risk: 1,\r\n    lpSymbol: 'IF1-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4b5676c8775f035405c817e11c2ecb3ce5e5ef90',\r\n    },\r\n    tokenSymbol: 'IF1',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xfcac1a3ede7b55cc51e3ebff2885a67fbfe01a1a',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 38,\r\n    risk: 1,\r\n    lpSymbol: 'OLIVE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x51123dd7bf791929bbfa75e913f7632a0ef1b82c',\r\n    },\r\n    tokenSymbol: 'OLIVE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x617724974218a18769020a70162165a539c07e8a',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 39,\r\n    risk: 1,\r\n    lpSymbol: 'QUA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x33565397280cef418fee0dc2f8ef58372adf0b2f',\r\n    },\r\n    tokenSymbol: 'QUA',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x21ed4f0669872a55cab53c0d9de65c7e4a7ea2c3',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n\r\n  // Pools\r\n  {\r\n    pid: 8,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'FSWAP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c4a2d3d166ddeb946106bed663a8257cb56cc20', // FSWAP-BUSD LP\r\n    },\r\n    tokenSymbol: 'FSWAP',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xd22246644d2BE5d0427a8E474477d96677C3eC24',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 9,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'FLAT',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x145194a70e1004f427fc6b1a7fed9362b1156a7c', // FLAT-BUSD LP\r\n    },\r\n    tokenSymbol: 'FLAT',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x41540ba32db90269bb72a7be1d4b1ee18f5544f1',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 10,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'QUA',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x96b17f45a3db439d19c7d81bf57b0fef3d2f6563', // QUA-BUSD LP\r\n    },\r\n    tokenSymbol: 'QUA',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x21ed4f0669872a55cab53c0d9de65c7e4a7ea2c3',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 13,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'GEM',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA566069C2Ec46d23920B79A5aE575Ee1DaBA8d90', // GEM-BUSD LP\r\n    },\r\n    tokenSymbol: 'GEM',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xBaC1df744df160877cDc45E13d0394c06bC388Ff',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 15,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'VDV',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1C5556C897DC72bA62D128d36D8c9C22c1b7717C', // VDV-BUSD LP\r\n    },\r\n    tokenSymbol: 'VDV',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xe586a0af5f3844f1408fed1d284270827a116010',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 17,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BABY',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x435Baccde8cd7362f5A64eE5181BB75c31e6BBda', // BABY-BUSD LP\r\n    },\r\n    tokenSymbol: 'BABY',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x53E562b9B7E5E94b81f10e96Ee70Ad06df3D2657',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 19,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91b974ec2af3c843270886528a9e6', // CAKE-BUSD LP\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 23,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BREW',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfd2a5f04368a18d3bd4204d7deb250b1710bbc15',\r\n    },\r\n    tokenSymbol: 'BREW',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x790be81c3ca0e53974be2688cdb954732c9862e1',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 30,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'GAME1',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0e78474c19732108640bA7810fB91aAfc156103D',\r\n    },\r\n    tokenSymbol: 'GAME1',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0E52d24c87A5ca4F37E3eE5E16EF5913fb0cCEEB',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 33,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'SEACHAIN',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa9c209fc2e6d7afbcfac15d7f1daf525c1276df0', // SEACHAIN-BUSD\r\n    },\r\n    tokenSymbol: 'SEACHAIN',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x36b24b2f78725495e858af9e72f7df69dade3dca',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 35,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'CHY',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc082826E954D2626248340495c39d58ab5953AA9', // CHY-BUSD\r\n    },\r\n    tokenSymbol: 'CHY',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8f0697be1d6af7e3415d87d6bad1073e5c6459d2',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 37,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'IF1',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5a18b1b92ace88b06dc06f57a36218ec106eb017', // IF1-BUSD\r\n    },\r\n    tokenSymbol: 'IF1',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xfcac1a3ede7b55cc51e3ebff2885a67fbfe01a1a',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 40,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'OLIVE',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b875a1af5daa94f91d808d6985783bfe058295', // OLIVE-BUSD\r\n    },\r\n    tokenSymbol: 'OLIVE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x617724974218a18769020a70162165a539c07e8a',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n]\r\n\r\n\r\nexport default farms\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PantherTheme } from '@pancakeswap-libs/uikit'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PantherTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Mitr', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    \r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  // AR,\r\n  // CA,\r\n  ZHCN,\r\n  ZHTW,\r\n  // CS,\r\n  // DA,\r\n  // DE,\r\n  // NL,\r\n  // FIL,\r\n  // FI,\r\n  // FR,\r\n  // EL,\r\n  // HI,\r\n  // HU,\r\n  // ID,\r\n  // IT,\r\n  // JA,\r\n  // KO,\r\n  // PTBR,\r\n  // RO,\r\n  // RU,\r\n  // SR,\r\n  // ESES,\r\n  // SVSE,\r\n  // TA,\r\n  // TR,\r\n  // UK,\r\n  // VI,\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then(r=>r.json())\r\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error(\"ERROR\");\r\n          console.error(e);\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@pancakeswap-libs/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    // return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n    return true\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeCopntext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: 'Trade',\r\n    icon: 'TradeIcon',\r\n    initialOpenState: true,\r\n    items: [\r\n      {\r\n        label: 'Exchange',\r\n        href: 'https://dev.dex.tremendousswap.com/swap',\r\n      },\r\n      {\r\n        label: 'Liquidity',\r\n        href: 'https://dev.dex.tremendousswap.com/pool',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: 'Pools',\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  \r\n  {\r\n    label: 'ICO',\r\n    icon: 'IfoIcon',\r\n    href: '/ico',\r\n  },\r\n  {\r\n    label: 'Audits',\r\n    icon: 'ShieldIcon',\r\n    href: '#',\r\n  },\r\n  {\r\n    label: 'Listings',\r\n    icon: 'ListingIcon',\r\n    items: [\r\n      {\r\n        label: 'BscScan',\r\n        href: 'https://bscscan.com/token/0xDa5c6c28F7705dD0aCCc0EF1CaB9185ecC494790',\r\n      },\r\n      {\r\n        label: 'Poocoin',\r\n        href: 'https://poocoin.app/tokens/0xda5c6c28f7705dd0accc0ef1cab9185ecc494790',\r\n      },\r\n      {\r\n        label: 'CoinGecko',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'CoinMarketCap',\r\n        href: 'https://coinmarketcap.com/currencies/tremendouscoin/',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    label: 'More',\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Github',\r\n        href: 'https://github.com/Tremendous-Coin',\r\n      },\r\n      {\r\n        label: 'Website',\r\n        href: 'https://tremendouscoin.com/',\r\n      }\r\n    ],\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account, connect, reset } = useWallet()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={connect}\r\n      logout={reset}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config}\r\n      priceLink=\"https://bscscan.com/token/0xDa5c6c28F7705dD0aCCc0EF1CaB9185ecC494790\"\r\n      rugDocLink=\"https://rugdoc.io/project/flatswap/\"\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap-libs/uikit'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import { Nft } from './types'\r\n\r\nexport const RABBIT_MINTING_FARM_ADDRESS = '0x7c8b60d2b859a38c8B9b5B6CB4565485cb637c7a'\r\nexport const PANCAKE_RABBITS_ADDRESS = '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n    previewImage: 'swapsies-preview.png',\r\n    blurImage: 'swapsies-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n    previewImage: 'drizzle-preview.png',\r\n    blurImage: 'drizzle-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n    previewImage: 'blueberries-preview.png',\r\n    blurImage: 'blueberries-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n    previewImage: 'circular-preview.png',\r\n    blurImage: 'circular-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n    previewImage: 'sparkle-preview.png',\r\n    blurImage: 'sparkle-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import React, { useEffect, useRef } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Modal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\r\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\r\nimport multicall from 'utils/multicall'\r\n\r\ninterface NftYouWonModalProps {\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ModalContent = styled.div`\r\n  padding: 24px;\r\n  text-align: center;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst NftYouWonModal: React.FC<NftYouWonModalProps> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        <img src=\"/images/present.svg\" alt=\"You won present\" style={{ height: '64px', marginBottom: '24px' }} />\r\n        <Heading size=\"lg\" color=\"secondary\">\r\n          {TranslateString(999, 'You won an NFT!')}\r\n        </Heading>\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button as=\"a\" href=\"/nft\">\r\n          {TranslateString(999, 'Go to claim NFT')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\n/**\r\n * 1. Checks if nft supply available\r\n * 2. If supply is available check if the user can claim\r\n * 3. If the user can claim show a modal\r\n */\r\nconst NftGlobalNotification = () => {\r\n  const { account } = useWallet()\r\n  const [onPresentBurnModal] = useModal(<NftYouWonModal />)\r\n  const showModal = useRef(() => onPresentBurnModal())\r\n\r\n  useEffect(() => {\r\n    const checkNftStatus = async () => {\r\n      const [totalSupplyDistributedArr, currentDistributedSupplyArr, canClaimArr, hasClaimedArr] = await multicall(\r\n        rabbitmintingfarm,\r\n        [\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'totalSupplyDistributed' },\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'currentDistributedSupply' },\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'canClaim', params: [account] },\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'hasClaimed', params: [account] },\r\n        ],\r\n      )\r\n\r\n      // TODO: Figure out why these values are coming back as an array\r\n      const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\r\n      const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\r\n      const [canClaim]: [boolean] = canClaimArr\r\n      const [hasClaimed]: [boolean] = hasClaimedArr\r\n\r\n      if (currentDistributedSupply.lt(totalSupplyDistributed) && canClaim && !hasClaimed) {\r\n        showModal.current()\r\n      }\r\n    }\r\n\r\n    if (account && !document.location.href.includes('/nft')) {\r\n      checkNftStatus()\r\n    }\r\n  }, [account, showModal])\r\n\r\n  return <div />\r\n}\r\n\r\nexport default NftGlobalNotification\r\n","import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useFetchPublicData } from 'state/hooks'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport PageLoader from './components/PageLoader'\r\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page'\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\n// const Lottery = lazy(() => import('./views/Lottery'))\r\nconst Pools = lazy(() => import('./views/Pools'))\r\n// const Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\n// const Nft = lazy(() => import('./views/Nft'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  const { account, connect } = useWallet()\r\n  useEffect(() => {\r\n    if (!account && window.localStorage.getItem('accountStatus')) {\r\n      connect('injected')\r\n    }\r\n  }, [account, connect])\r\n\r\n  useFetchPublicData()\r\n\r\n  return (\r\n    <Router>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Farms tokenMode />\r\n            </Route>\r\n            {/* <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route> */}\r\n            {/* <Route path=\"/lottery\"> */}\r\n            {/*  <Lottery /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/ifo\"> */}\r\n            {/*  <Ifos /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/nft\"> */}\r\n            {/*  <Nft /> */}\r\n            {/* </Route> */}\r\n            {/* Redirect */}\r\n            {/* <Route path=\"/staking\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/syrup\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Menu>\r\n      <NftGlobalNotification />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\n\r\nexport default configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\r\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\r\nimport * as bsc from '@binance-chain/bsc-use-wallet'\r\nimport { Provider } from 'react-redux'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { BlockContextProvider } from 'contexts/BlockContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  const rpcUrl = getRpcUrl()\r\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeContextProvider>\r\n        <LanguageContextProvider>\r\n          <bsc.UseWalletProvider\r\n            chainId={chainId}\r\n            connectors={{\r\n              walletconnect: { rpcUrl },\r\n              bsc,\r\n            }}\r\n          >\r\n            <BlockContextProvider>\r\n              <RefreshContextProvider>\r\n                <ModalProvider>{children}</ModalProvider>\r\n              </RefreshContextProvider>\r\n            </BlockContextProvider>\r\n          </bsc.UseWalletProvider>\r\n        </LanguageContextProvider>\r\n      </ThemeContextProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using our own private provider httpProver\r\n */\r\nconst getWeb3 = () => {\r\n  const web3 = new Web3(httpProvider)\r\n  return web3\r\n}\r\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = getWeb3()\r\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\r\n}\r\n\r\nexport { getWeb3, getContract, httpProvider }\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n"],"sourceRoot":""}