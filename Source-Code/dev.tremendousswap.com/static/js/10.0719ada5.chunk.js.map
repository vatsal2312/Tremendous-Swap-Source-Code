{"version":3,"sources":["components/Input/Input.tsx","hooks/useHarvest.ts","hooks/useApprove.ts","hooks/useStake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/TokenInput/TokenInput.tsx","hooks/useUnstake.ts","hooks/useBlock.ts","components/layout/Flex.tsx","components/Tags.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","useHarvest","farmPid","dispatch","useDispatch","account","useWallet","masterChefContract","useMasterchef","onReward","useCallback","a","harvest","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","pid","Promise","all","useSousHarvest","sousId","isUsingBnb","sousChefContract","useSousChef","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","useIfoApprove","tokenContract","spenderAddress","methods","ethers","constants","MaxUint256","send","from","useSousStake","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","onStake","useStake","console","info","StyledSpacer","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","BigNumber","times","toString","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","useUnstake","useBlock","BlockContext","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","StyledLabel","isFinished","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","decimals","unit","prefix","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","pow","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","CardTitle","Card","card","background","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","totalStakedInUSD","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","stakingTokenDecimals","startBlock","endBlock","depositFee","stakeLimit","userData","stakingLimit","totalStakedAmountInUSD","userStakedAmountInUSD","isBnbPool","stakingTokenContract","useERC20","block","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentWithdraw","handleApprove","error","display","alignItems","justifyContent","src","toLocaleLowerCase","toLowerCase","width","height","alt","getBalanceNumber","HarvestButton","UnlockButton","flex","mr","eq","isNaN","isFinite","flexDirection","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","textSubtle","BannerImage","img","Farm","path","farms","useFarms","pools","usePools","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","quoteTokenSymbol","stakingTokenPriceInUSD","tokenPriceVsQuote","quoteTokenPrice","totalRewardPricePerYear","tokenPerBlock","BLOCKS_PER_YEAR","sort","pool1","pool2","partition","finishedPools","openPools","Page","mb","textAlign","Divider","Flex","exact","orderBy","maxWidth","marginTop"],"mappings":"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","file":"static/js/10.0719ada5.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      {\r\n        depositFeeBP > 0 ?\r\n          <StyledMaxText>\r\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\r\n          </StyledMaxText>\r\n          :\r\n          null\r\n      }\r\n\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TokenInput\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = []\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\r\n\r\nconst NoFeeTag = () => (\r\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\r\n    No Fees\r\n  </Tag>\r\n)\r\n\r\nconst RiskTag = ({ risk }) => (\r\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\r\n    Risk {risk}\r\n  </Tag>\r\n)\r\n\r\nconst CoreTag = () => (\r\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\r\n    Core\r\n  </Tag>\r\n)\r\n\r\nconst CommunityTag = () => (\r\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\r\n    Community\r\n  </Tag>\r\n)\r\n\r\nconst BinanceTag = () => (\r\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\r\n    Binance\r\n  </Tag>\r\n)\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface LabelProps {\r\n  text?: string\r\n  isFinished?: boolean\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\r\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\r\n)\r\n\r\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\r\n  font-size: 14px;\r\n`\r\n\r\nexport default Label\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface TextProps {\r\n  isDisabled?: boolean\r\n  fontSize?: string\r\n  color?: string\r\n}\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value?: number\r\n  decimals?: number\r\n  unit?: string\r\n  prefix?: string\r\n}\r\n\r\nconst StyledText = styled(Text) <TextProps>`\r\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\r\n`\r\n\r\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit, prefix }) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\r\n      {value && prefix && <span>{prefix}</span>}\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {value && unit && <span>{unit}</span>}\r\n    </StyledText>\r\n  )\r\n}\r\n\r\nBalance.defaultProps = {\r\n  fontSize: '32px',\r\n  isDisabled: false,\r\n  color: '#FFFFFF',\r\n  decimals: 3,\r\n}\r\n\r\nexport default Balance\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  decimals: number\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, decimals, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals)\r\n  }, [max, decimals])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(new BigNumber(val).times(new BigNumber(10).pow(decimals)).toString())\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  decimals: number\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, decimals, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals)\r\n  }, [max, decimals])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(new BigNumber(val).times(new BigNumber(10).pow(decimals)).toString())\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport Balance from 'components/Balance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  earnings: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(earnings)\r\n  }, [earnings])\r\n\r\n  return (\r\n    <Modal\r\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <BalanceRow>\r\n        <Balance value={Number(fullBalance)} />\r\n      </BalanceRow>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"compound-cake\"\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(fullBalance)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CompoundModal\r\n\r\nconst BalanceRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledTitleProps {\r\n  isFinished?: boolean\r\n}\r\n\r\nconst CardTitle = styled.div<StyledTitleProps>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 1.1;\r\n  margin-bottom: 14px;\r\n`\r\n\r\nexport default CardTitle\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\r\n  background: ${(props) => props.theme.card.background};\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  border-radius: 32px;\r\n  display: flex;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: ${({ isActive }) =>\r\n    isActive\r\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\r\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\r\n  flex-direction: column;\r\n  position: relative;\r\n`\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CardTitle from './CardTitle'\r\n\r\ninterface Props {\r\n  hasBalance?: boolean\r\n}\r\n\r\nconst Title = styled.div`\r\n  color: #ed4b9e;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n`\r\n\r\nconst ActionLink = styled.a`\r\n  color: #ed4b9e;\r\n  font-size: 14px;\r\n`\r\n\r\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\r\n  if (hasBalance) {\r\n    return (\r\n      <div>\r\n        <Title>Action Required</Title>\r\n        <ActionLink\r\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\r\n          target=\"_blank\"\r\n        >\r\n          What do I need to do?\r\n        </ActionLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CardTitle isFinished>FINISHED</CardTitle>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OldSyrupTitle\r\n","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode\r\n  disabled?: boolean\r\n  href?: string\r\n  onClick?: () => void\r\n  size?: 'sm' | 'md' | 'lg'\r\n  text?: string\r\n  to?: string\r\n  variant?: 'default' | 'secondary' | 'tertiary'\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\r\n  const { colors, spacing } = useContext(ThemeContext)\r\n  const buttonColor = colors.background\r\n\r\n  let boxShadow: string\r\n  let buttonSize: number\r\n  let buttonPadding: number\r\n  let fontSize: number\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3]\r\n      buttonSize = 36\r\n      fontSize = 14\r\n      break\r\n    case 'lg':\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 72\r\n      fontSize = 16\r\n      break\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 56\r\n      fontSize = 16\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>\r\n    }\r\n    if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      )\r\n    }\r\n    return text\r\n  }, [href, text, to])\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string\r\n  color: string\r\n  disabled?: boolean\r\n  fontSize: number\r\n  padding: number\r\n  size: number\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\r\n  width: 100px;\r\n  height: 30px;\r\n  font-size: 14px;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nexport default Button\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport Balance from 'components/Balance'\r\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\nconst tags = {\r\n  [PoolCategory.BINANCE]: BinanceTag,\r\n  [PoolCategory.CORE]: CoreTag,\r\n  [PoolCategory.COMMUNITY]: CommunityTag,\r\n}\r\n\r\ninterface Props {\r\n  projectLink: string\r\n  totalStaked: number\r\n  totalStakedInUSD: number\r\n  blocksRemaining: number\r\n  isFinished: boolean\r\n  blocksUntilStart: number\r\n  poolCategory: PoolCategory\r\n}\r\n\r\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledDetailsButton = styled.button`\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  height: 32px;\r\n  justify-content: center;\r\n  outline: 0;\r\n  padding: 0;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  & > svg {\r\n    margin-left: 4px;\r\n  }\r\n`\r\n\r\nconst Details = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst FlexFull = styled.div`\r\n  flex: 1;\r\n`\r\nconst Label = styled.div`\r\n  font-size: 14px;\r\n`\r\nconst TokenLink = styled.a`\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  color: #12aab5;\r\n`\r\n\r\nconst CardFooter: React.FC<Props> = ({\r\n  projectLink,\r\n  totalStaked,\r\n  totalStakedInUSD,\r\n  blocksRemaining,\r\n  isFinished,\r\n  blocksUntilStart,\r\n  poolCategory,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const Icon = isOpen ? ChevronUp : ChevronDown\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n  const Tag = tags[poolCategory]\r\n\r\n  return (\r\n    <StyledFooter isFinished={isFinished}>\r\n      <Row>\r\n        <FlexFull>\r\n          <Tag />\r\n        </FlexFull>\r\n        <StyledDetailsButton onClick={handleClick}>\r\n          {isOpen ? 'Hide' : 'Details'} <Icon />\r\n        </StyledDetailsButton>\r\n      </Row>\r\n      {isOpen && (\r\n        <Details>\r\n          <Row style={{ marginBottom: '4px' }}>\r\n            <FlexFull>\r\n              <Label>\r\n                {/* <span role=\"img\" aria-label=\"syrup\">\r\n                  🥞{' '}\r\n                </span> */}\r\n                {TranslateString(408, 'Total')}\r\n              </Label>\r\n            </FlexFull>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} decimals={0} value={totalStaked} />\r\n            (<Balance fontSize=\"14px\" isDisabled={isFinished} decimals={0} value={totalStakedInUSD} prefix=\"$\" />)\r\n          </Row>\r\n          {blocksUntilStart > 0 && (\r\n            <Row>\r\n              <FlexFull>\r\n                <Label>{TranslateString(999, 'Start')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\r\n            </Row>\r\n          )}\r\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\r\n            <Row>\r\n              <FlexFull>\r\n                <Label>{TranslateString(410, 'End')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\r\n            </Row>\r\n          )}\r\n          <TokenLink href={projectLink} target=\"_blank\">\r\n            {TranslateString(412, 'View project site')}\r\n          </TokenLink>\r\n        </Details>\r\n      )}\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(CardFooter)\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, IconButton, useModal, AddIcon, Image, Text, Flex } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Label from 'components/Label'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport Balance from 'components/Balance'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport CompoundModal from './CompoundModal'\r\nimport CardTitle from './CardTitle'\r\nimport Card from './Card'\r\nimport OldSyrupTitle from './OldSyrupTitle'\r\nimport HarvestButton from './HarvestButton'\r\nimport CardFooter from './CardFooter'\r\n\r\ninterface PoolWithApy extends Pool {\r\n  apy: BigNumber\r\n  totalStakedAmountInUSD: BigNumber\r\n  userStakedAmountInUSD: BigNumber\r\n}\r\n\r\ninterface HarvestProps {\r\n  pool: PoolWithApy\r\n}\r\n\r\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\r\n  const {\r\n    sousId,\r\n    image,\r\n    tokenName,\r\n    stakingTokenName,\r\n    stakingTokenAddress,\r\n    projectLink,\r\n    harvest,\r\n    apy,\r\n    tokenDecimals,\r\n    stakingTokenDecimals,\r\n    poolCategory,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    depositFee,\r\n    stakeLimit,\r\n    isFinished,\r\n    userData,\r\n    stakingLimit,\r\n    totalStakedAmountInUSD,\r\n    userStakedAmountInUSD\r\n  } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const TranslateString = useI18n()\r\n  const stakingTokenContract = useERC20(stakingTokenAddress)\r\n  const { account } = useWallet()\r\n  const block = useBlock()\r\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId)\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const allowance = new BigNumber(userData?.allowance || 0)\r\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\r\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\r\n\r\n  const earnings = new BigNumber(userData?.pendingReward || 0)\r\n\r\n  const blocksUntilStart = Math.max(startBlock - block, 0)\r\n\r\n  const blocksRemaining = Math.max(endBlock - block, 0)\r\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\r\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\r\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\r\n  const isCardActive = isFinished && accountHasStakedBalance\r\n\r\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\r\n      decimals={stakingTokenDecimals}\r\n      onConfirm={onStake}\r\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\r\n    />,\r\n  )\r\n\r\n  const [onPresentCompound] = useModal(\r\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} decimals={stakingTokenDecimals} onConfirm={onUnstake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\r\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\r\n      <div style={{ padding: '24px' }}>\r\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n          <CardTitle isFinished={isFinished && sousId !== 0}>\r\n            {isOldSyrup && '[OLD]'} {tokenName} Pool\r\n          </CardTitle>\r\n          <Image src={`/images/pools/${image || `${stakingTokenName.toLocaleLowerCase()}-${tokenName.toLowerCase()}`}.png`}\r\n            width={64} height={64} alt={stakingTokenName} />\r\n        </div>\r\n        {!isOldSyrup ? (\r\n          <BalanceAndCompound>\r\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\r\n            {/* {sousId === 0 && account && harvest && (\r\n              <HarvestButton\r\n                disabled={!earnings.toNumber() || pendingTx}\r\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\r\n                onClick={onPresentCompound}\r\n              />\r\n            )} */}\r\n            {account && harvest && !isOldSyrup && (\r\n              <HarvestButton\r\n                disabled={!earnings.toNumber() || pendingTx}\r\n                text={pendingTx ? 'Collecting' : 'Harvest'}\r\n                onClick={async () => {\r\n                  setPendingTx(true)\r\n                  await onReward()\r\n                  setPendingTx(false)\r\n                }}\r\n              />\r\n            )}\r\n          </BalanceAndCompound>\r\n        ) : (\r\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\r\n        )}\r\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\r\n        <StyledCardActions>\r\n          {!account && <UnlockButton />}\r\n          {account &&\r\n            (needsApproval && !isOldSyrup ? (\r\n              <div style={{ flex: 1 }}>\r\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\r\n                  {`Approve ${stakingTokenName}`}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  mr=\"5px\"\r\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\r\n                  onClick={\r\n                    isOldSyrup\r\n                      ? async () => {\r\n                        setPendingTx(true)\r\n                        await onUnstake('0')\r\n                        setPendingTx(false)\r\n                      }\r\n                      : onPresentWithdraw\r\n                  }\r\n                >\r\n                  Withdraw\r\n                </Button>\r\n                <StyledActionSpacer />\r\n                {!isOldSyrup && (\r\n                  <Button disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\r\n                    Deposit\r\n                  </Button>\r\n                )}\r\n              </>\r\n            ))}\r\n        </StyledCardActions>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(999, 'Stake')}:</div>\r\n          <Text fontSize=\"14px\" bold>{stakingTokenName}</Text>\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(999, 'Earn')}:</div>\r\n          <Text fontSize=\"14px\" bold>{tokenName}</Text>\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(999, 'Deposit Fee')}:</div>\r\n          <Text fontSize=\"14px\" bold>{(depositFee || 0) / 100} %</Text>\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\r\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\r\n            '-'\r\n          ) : (\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\r\n          )}\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(999, 'Stake Limit')}:</div>\r\n          <Text fontSize=\"14px\" bold>{new BigNumber(stakeLimit).isGreaterThan(new BigNumber(0))\r\n            ? new BigNumber(stakeLimit).div(new BigNumber(10).pow(stakingTokenDecimals)).toString() : 'No Limit'}</Text>\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>\r\n            {/* <span role=\"img\" aria-label={stakingTokenName}>\r\n              🥞{' '}\r\n            </span> */}\r\n            {TranslateString(384, 'Your Stake')}:\r\n          </div>\r\n          <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance, stakingTokenDecimals)} />\r\n            <Balance fontSize=\"14px\" color=\"textSubtle\" isDisabled={isFinished}\r\n              value={userStakedAmountInUSD.isNaN() ? 0 : userStakedAmountInUSD.toNumber()} prefix=\"($\" unit=\")\" />\r\n          </Flex>\r\n        </StyledDetails>\r\n      </div>\r\n      <CardFooter\r\n        projectLink={projectLink}\r\n        totalStaked={getBalanceNumber(pool.totalStaked, pool.stakingTokenDecimals)}\r\n        totalStakedInUSD={totalStakedAmountInUSD?.toNumber()}\r\n        blocksRemaining={blocksRemaining}\r\n        isFinished={isFinished}\r\n        blocksUntilStart={blocksUntilStart}\r\n        poolCategory={poolCategory}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst PoolFinishedSash = styled.div`\r\n  background-image: url('/images/pool-finished-sash.svg');\r\n  background-position: top right;\r\n  background-repeat: not-repeat;\r\n  height: 135px;\r\n  position: absolute;\r\n  right: -24px;\r\n  top: -24px;\r\n  width: 135px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 16px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n  align-items: center;\r\n`\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst PoolTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {TranslateString(999, 'Active')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {TranslateString(999, 'Inactive')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport Coming from './components/Coming'\r\nimport PoolCard from './components/PoolCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nconst Farm: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const farms = useFarms()\r\n  const pools = usePools(account)\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const block = useBlock()\r\n\r\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\r\n    const tokenPriceBN = new BigNumber(tokenPrice)\r\n    if (tokenName === 'BNB') {\r\n      return new BigNumber(1)\r\n    }\r\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\r\n      return tokenPriceBN.div(bnbPriceUSD)\r\n    }\r\n    return tokenPriceBN\r\n  }\r\n\r\n  let poolsWithApy = pools.map((pool) => {\r\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\r\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\r\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName || `${s.tokenSymbol}-${s.quoteTokenSymbol}` === pool.stakingTokenName)\r\n    const stakingTokenPriceInUSD = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote).times(stakingTokenFarm?.quoteTokenPrice)\r\n    // const rewardTokenPriceInBNB = priceToBnb(\r\n    //   pool.tokenName,\r\n    //   rewardTokenFarm?.tokenPriceVsQuote,\r\n    //   rewardTokenFarm?.quoteTokenSymbol,\r\n    // )\r\n    const rewardTokenPriceInUsd = new BigNumber(rewardTokenFarm?.tokenPriceVsQuote).times(rewardTokenFarm?.quoteTokenPrice)\r\n\r\n    const totalRewardPricePerYear = rewardTokenPriceInUsd.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n    const totalStakedAmountInUSD = stakingTokenPriceInUSD.times(getBalanceNumber(pool.totalStaked, pool.stakingTokenDecimals))\r\n    const userStakedAmountInUSD = stakingTokenPriceInUSD.times(getBalanceNumber(pool.userData?.stakedBalance, pool.stakingTokenDecimals))\r\n\r\n    const apy = totalRewardPricePerYear.div(totalStakedAmountInUSD).times(100)\r\n\r\n    return {\r\n      ...pool,\r\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\r\n      apy,\r\n      userStakedAmountInUSD,\r\n      totalStakedAmountInUSD\r\n    }\r\n  })\r\n\r\n  poolsWithApy = poolsWithApy.sort((pool1, pool2) => {\r\n    if (pool1.apy > pool2.apy) {\r\n      return -1\r\n    }\r\n    return 1\r\n  })\r\n\r\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\r\n\r\n  return (\r\n    <Page>\r\n      <Heading as=\"h1\" size=\"xl\" color=\"primary\" mb=\"10px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(999, 'Pools')}\r\n      </Heading>\r\n      <Heading as=\"h1\" size=\"lg\" color=\"#9700ff\" mb=\"50px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(999, 'Stake TMDS to earn rewards.')}\r\n      </Heading>\r\n      <PoolTabButtons />\r\n      <Divider />\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          <>\r\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\r\n              <PoolCard key={pool.sousId} pool={pool} />\r\n            ))}\r\n            {/* <Coming /> */}\r\n          </>\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\r\n            <PoolCard key={pool.sousId} pool={pool} />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n      <div style={{ maxWidth: \"100%\", textAlign: 'center', marginTop: '25px' }}>\r\n        <BannerImage src=\"/images/egg/8.png\" alt=\"illustration\" />\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: 1fr;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 250px;\r\n  padding: 48px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  img {\r\n    height: auto;\r\n    max-width: 100%;\r\n  }\r\n  @media (min-width: 576px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`\r\n\r\nconst BannerImage = styled.img`\r\n  max-width: 300px;\r\n  height: auto;\r\n`\r\n\r\nexport default Farm\r\n"],"sourceRoot":""}