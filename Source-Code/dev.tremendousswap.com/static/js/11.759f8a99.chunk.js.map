{"version":3,"sources":["utils/erc20.ts","components/Input/Input.tsx","hooks/useApprove.ts","hooks/useTokenBalance.ts","hooks/useBlock.ts","utils/getTimePeriods.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","hooks/useAllowance.ts","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","useApprove","dispatch","useDispatch","useWallet","useMasterchef","onApprove","useCallback","approve","tx","fetchFarmUserDataAsync","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","useIfoApprove","tokenContract","spenderAddress","ethers","constants","MaxUint256","send","from","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTokenBalance","ethereum","fastRefresh","res","useBlock","useContext","BlockContext","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getShortFormatTime","seconds","Math","ceil","getTimePeriods","delta","timeLeft","years","months","days","hours","minutes","floor","Wrapper","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","StyledIfoCardHeader","Flex","Name","Heading","attrs","Description","Text","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledProgress","IfoCardProgress","progress","primaryStep","StyledIfoCardDescription","Divider","borderColor","ToggleButton","button","isOpen","IfoCardDescription","defaultIsOpen","description","setIsOpen","TranslateString","useI18n","onClick","StyledIfoCardDetails","Item","secondary","Display","IfoCardDetails","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","raisingAmount","totalAmount","href","target","rel","ml","style","display","times","toFixed","margin","Details","Countdown","IfoCardTime","isLoading","status","secondsUntilStart","secondsUntilEnd","block","countdownToUse","timeUntil","suffix","bold","ButtonWrapper","LabelButton","label","buttonLabel","disabled","fontSize","color","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onSelectMax","toLocaleString","ContributeModal","currency","currencyAddress","onDismiss","setValue","pendingTx","setPendingTx","getFullDisplayBalance","title","e","currentTarget","toString","justifyContent","fullWidth","mr","deposit","pow","IfoCardContribute","tokenDecimals","offeringTokenBalance","setOfferingTokenBalance","amount","claimed","userInfo","setUserInfo","contractRaisingToken","useERC20","dependency","setAllowance","fetch","useIfoAllowance","useModal","onPresentContributeModal","getOfferingAmount","userinfo","claim","harvest","isFinished","percentOfUserContribution","console","error","getBalanceNumber","StyledIfoCard","Card","getStatus","currentBlock","startBlock","endBlock","IfoCard","ifo","id","releaseBlockNumber","blocksRemaining","startBlockNum","endBlockNum","state","setState","useIfoContract","Ribbon","variantColor","text","getRibbonComponent","Promise","all","parseInt","totalBlocks","BSC_BLOCK_TIME","fetchProgress","isActive","ribbon","UnlockButton","Title","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","pt","responsive","mt","external","inactiveIfo","filter","PastIfo","map","Ifos","path","Page","textAlign","Container","exact","CurrentIfo"],"mappings":"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","file":"static/js/11.759f8a99.chunk.js","sourcesContent":["import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2592000\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\nexport const getShortFormatTime = (seconds: number) => {\r\n  if (seconds >= MONTH_IN_SECONDS) {\r\n    return `${Math.ceil(seconds / MONTH_IN_SECONDS)} Month(s)`\r\n  }\r\n  if (seconds >= DAY_IN_SECONDS) {\r\n    return `${Math.ceil(seconds / DAY_IN_SECONDS)} Day(s)`\r\n  }\r\n  if (seconds >= HOUR_IN_SECONDS) {\r\n    return `${Math.ceil(seconds / HOUR_IN_SECONDS)} Hour(s)`\r\n  }\r\n  if (seconds >= MINUTE_IN_SECONDS) {\r\n    return `${Math.ceil(seconds / MINUTE_IN_SECONDS)} Minute(s)`\r\n  }\r\n  \r\n  return `${Math.ceil(seconds)} Second(s)`\r\n  \r\n}\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 39px;\r\n`\r\n\r\nconst IfoTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          Next ITO\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          Past ITOs\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default IfoTabButtons\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardHeaderProps {\r\n  ifoId: string\r\n  name: string\r\n  subTitle: string\r\n}\r\n\r\nconst StyledIfoCardHeader = styled(Flex)`\r\n  & > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\r\n  margin-bottom: 4px;\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  text-align: right;\r\n`\r\n\r\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\r\n  return (\r\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\r\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\r\n      <div>\r\n        <Name>{name}</Name>\r\n        <Description>{subTitle}</Description>\r\n      </div>\r\n    </StyledIfoCardHeader>\r\n  )\r\n}\r\n\r\nexport default IfoCardHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Progress } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardProgressProps {\r\n  progress: number\r\n}\r\n\r\nconst StyledProgress = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\r\n  return (\r\n    <StyledProgress>\r\n      <Progress primaryStep={progress} />\r\n    </StyledProgress>\r\n  )\r\n}\r\n\r\nexport default IfoCardProgress\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardDescriptionProps {\r\n  defaultIsOpen?: boolean\r\n  description: string\r\n}\r\n\r\nconst StyledIfoCardDescription = styled.div`\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 90%;\r\n`\r\n\r\nconst ToggleButton = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  cursor: pointer;\r\n  display: block;\r\n  font-weight: 600;\r\n  outline: 0;\r\n  padding: 24px 16px;\r\n  width: 100%;\r\n`\r\n\r\nconst Description = styled(Text)<{ isOpen: boolean }>`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\r\n`\r\n\r\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\r\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <StyledIfoCardDescription>\r\n      <Divider />\r\n      <ToggleButton onClick={handleClick}>\r\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\r\n      </ToggleButton>\r\n      <Description isOpen={isOpen}>{description}</Description>\r\n    </StyledIfoCardDescription>\r\n  )\r\n}\r\n\r\nexport default IfoCardDescription\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, LinkExternal, Link } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardDetailsProps {\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  raisingAmount: BigNumber\r\n  totalAmount: BigNumber\r\n}\r\n\r\nconst StyledIfoCardDetails = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Item = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  display: flex;\r\n`\r\n\r\nconst Display = styled(Text)`\r\n  flex: 1;\r\n`\r\n\r\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\r\n  launchDate,\r\n  launchTime,\r\n  saleAmount,\r\n  raiseAmount,\r\n  cakeToBurn,\r\n  projectSiteUrl,\r\n  raisingAmount,\r\n  totalAmount,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <StyledIfoCardDetails>\r\n        <Item>\r\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\r\n          <Text>\r\n            {launchDate},\r\n            <Link\r\n              href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\r\n              target=\"blank\"\r\n              rel=\"noopener noreferrer\"\r\n              ml=\"4px\"\r\n              style={{ display: 'inline' }}\r\n            >\r\n              {launchTime}\r\n            </Link>\r\n          </Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>{TranslateString(584, 'For Sale')}</Display>\r\n          <Text>{saleAmount}</Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\r\n          <Text>{raiseAmount}</Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>{TranslateString(586, 'CAKE to burn (USD)')}</Display>\r\n          <Text>{cakeToBurn}</Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\r\n          <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\r\n        </Item>\r\n      </StyledIfoCardDetails>\r\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\r\n        {TranslateString(412, 'View project site')}\r\n      </LinkExternal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardDetails\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, Text } from '@pancakeswap-libs/uikit'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardTimeProps {\r\n  isLoading: boolean\r\n  status: IfoStatus\r\n  secondsUntilStart: number\r\n  secondsUntilEnd: number\r\n  block: number\r\n}\r\n\r\nconst Details = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Countdown = styled.div`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`\r\n\r\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ isLoading, status, secondsUntilStart, secondsUntilEnd, block }) => {\r\n  const TranslateString = useI18n()\r\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\r\n  const timeUntil = getTimePeriods(countdownToUse)\r\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\r\n\r\n  if (isLoading) {\r\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\r\n  }\r\n\r\n  if (countdownToUse <= 0) {\r\n    return (\r\n      <Details>\r\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\r\n      </Details>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Details>\r\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\r\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\r\n        (blocks)\r\n      </Link>\r\n    </Details>\r\n  )\r\n}\r\n\r\nexport default IfoCardTime\r\n","import React, { ButtonHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  value: string\r\n  label?: string\r\n  buttonLabel: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: solid 1px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border-color: ${({ theme }) => theme.colors.borderColor};\r\n  padding-left: 16px;\r\n`\r\n\r\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\r\n  return (\r\n    <div>\r\n      {label && (\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {label}\r\n        </Text>\r\n      )}\r\n      <ButtonWrapper>\r\n        <Text bold fontSize=\"20px\">\r\n          {value}\r\n        </Text>\r\n        <Button onClick={onClick} disabled={disabled}>\r\n          {buttonLabel}\r\n        </Button>\r\n      </ButtonWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LabelButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Input, { InputProps } from './Input'\r\n\r\ninterface Props extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BalanceInput\r\n","import React, { useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport BalanceInput from 'components/Input/BalanceInput'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface Props {\r\n  currency: string\r\n  contract: any\r\n  currencyAddress: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\r\n  const [value, setValue] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWallet()\r\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\r\n\r\n  return (\r\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\r\n      <BalanceInput\r\n        value={value}\r\n        onChange={(e) => setValue(e.currentTarget.value)}\r\n        symbol={currency}\r\n        max={balance}\r\n        onSelectMax={() => setValue(balance.toString())}\r\n      />\r\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await contract.methods\r\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\r\n              .send({ from: account })\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </Flex>\r\n      <LinkExternal\r\n        href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\r\n        style={{ margin: 'auto' }}\r\n      >\r\n        {`Get ${currency}`}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ContributeModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useModal, Button, Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useIfoAllowance } from 'hooks/useAllowance'\r\nimport { useIfoApprove } from 'hooks/useApprove'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport LabelButton from './LabelButton'\r\nimport ContributeModal from './ContributeModal'\r\n\r\nexport interface Props {\r\n  address: string\r\n  currency: string\r\n  currencyAddress: string\r\n  contract: Contract\r\n  status: IfoStatus\r\n  raisingAmount: BigNumber\r\n  tokenDecimals: number\r\n}\r\n\r\nconst IfoCardContribute: React.FC<Props> = ({\r\n  address,\r\n  currency,\r\n  currencyAddress,\r\n  contract,\r\n  status,\r\n  raisingAmount,\r\n  tokenDecimals,\r\n}) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [offeringTokenBalance, setOfferingTokenBalance] = useState(new BigNumber(0))\r\n  const [userInfo, setUserInfo] = useState({ amount: 0, claimed: false })\r\n\r\n  const { account } = useWallet()\r\n  const contractRaisingToken = useERC20(currencyAddress)\r\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\r\n  const onApprove = useIfoApprove(contractRaisingToken, address)\r\n  const [onPresentContributeModal] = useModal(\r\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const balance = new BigNumber(await contract.methods.getOfferingAmount(account).call())\r\n      const userinfo = await contract.methods.userInfo(account).call()\r\n\r\n      setUserInfo(userinfo)\r\n      setOfferingTokenBalance(balance)\r\n    }\r\n\r\n    if (account) {\r\n      fetch()\r\n    }\r\n  }, [account, contract.methods, pendingTx])\r\n\r\n  if (allowance === null) {\r\n    return null\r\n  }\r\n\r\n  const claim = async () => {\r\n    setPendingTx(true)\r\n    await contract.methods.harvest().send({ from: account })\r\n    setPendingTx(false)\r\n  }\r\n  const isFinished = status === 'finished'\r\n  const percentOfUserContribution = new BigNumber(userInfo.amount).div(raisingAmount).times(100)\r\n\r\n  if (allowance <= 0) {\r\n    return (\r\n      <Button\r\n        fullWidth\r\n        disabled={pendingTx || isFinished}\r\n        onClick={async () => {\r\n          try {\r\n            setPendingTx(true)\r\n            await onApprove()\r\n            setPendingTx(false)\r\n          } catch (e) {\r\n            setPendingTx(false)\r\n            console.error(e)\r\n          }\r\n        }}\r\n      >\r\n        Approve\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LabelButton\r\n        disabled={pendingTx || userInfo.claimed}\r\n        buttonLabel={isFinished ? 'Claim' : 'Contribute'}\r\n        label={isFinished ? 'Your tokens to claim' : `Your contribution (${currency})`}\r\n        value={\r\n          // eslint-disable-next-line no-nested-ternary\r\n          isFinished\r\n            ? userInfo.claimed\r\n              ? 'Claimed'\r\n              : getBalanceNumber(offeringTokenBalance, tokenDecimals).toFixed(4)\r\n            : getBalanceNumber(new BigNumber(userInfo.amount)).toFixed(4)\r\n        }\r\n        onClick={isFinished ? claim : onPresentContributeModal}\r\n      />\r\n      <Text fontSize=\"14px\" color=\"textSubtle\">\r\n        {isFinished\r\n          ? `You'll be refunded any excess tokens when you claim`\r\n          : `${percentOfUserContribution.toFixed(5)}% of total`}\r\n      </Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardContribute\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\r\nimport { BSC_BLOCK_TIME } from 'config'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { useIfoContract } from 'hooks/useContract'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport IfoCardHeader from './IfoCardHeader'\r\nimport IfoCardProgress from './IfoCardProgress'\r\nimport IfoCardDescription from './IfoCardDescription'\r\nimport IfoCardDetails from './IfoCardDetails'\r\nimport IfoCardTime from './IfoCardTime'\r\nimport IfoCardContribute from './IfoCardContribute'\r\n\r\nexport interface IfoCardProps {\r\n  ifo: Ifo\r\n}\r\n\r\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\r\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  padding-top: 112px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 437px;\r\n  width: 100%;\r\n`\r\n\r\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus | null => {\r\n  if (currentBlock < startBlock) {\r\n    return 'coming_soon'\r\n  }\r\n\r\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\r\n    return 'live'\r\n  }\r\n\r\n  if (currentBlock > endBlock) {\r\n    return 'finished'\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\r\n  if (status === 'coming_soon') {\r\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\r\n  }\r\n\r\n  if (status === 'live') {\r\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\r\n  const {\r\n    id,\r\n    address,\r\n    name,\r\n    subTitle,\r\n    description,\r\n    launchDate,\r\n    launchTime,\r\n    saleAmount,\r\n    raiseAmount,\r\n    cakeToBurn,\r\n    projectSiteUrl,\r\n    currency,\r\n    currencyAddress,\r\n    tokenDecimals,\r\n    releaseBlockNumber,\r\n  } = ifo\r\n  const [state, setState] = useState({\r\n    isLoading: true,\r\n    status: null,\r\n    blocksRemaining: 0,\r\n    secondsUntilStart: 0,\r\n    progress: 0,\r\n    secondsUntilEnd: 0,\r\n    raisingAmount: new BigNumber(0),\r\n    totalAmount: new BigNumber(0),\r\n    startBlockNum: 0,\r\n    endBlockNum: 0,\r\n  })\r\n  const { account } = useWallet()\r\n  const contract = useIfoContract(address)\r\n\r\n  const currentBlock = useBlock()\r\n  const TranslateString = useI18n()\r\n\r\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\r\n\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      const [startBlock, endBlock, raisingAmount, totalAmount] = await Promise.all([\r\n        contract.methods.startBlock().call(),\r\n        contract.methods.endBlock().call(),\r\n        contract.methods.raisingAmount().call(),\r\n        contract.methods.totalAmount().call(),\r\n      ])\r\n\r\n      const startBlockNum = parseInt(startBlock, 10)\r\n      const endBlockNum = parseInt(endBlock, 10)\r\n\r\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\r\n      const totalBlocks = endBlockNum - startBlockNum\r\n      const blocksRemaining = endBlockNum - currentBlock\r\n\r\n      // Calculate the total progress until finished or until start\r\n      const progress =\r\n        currentBlock > startBlockNum\r\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\r\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\r\n\r\n      setState({\r\n        isLoading: false,\r\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\r\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\r\n        raisingAmount: new BigNumber(raisingAmount),\r\n        totalAmount: new BigNumber(totalAmount),\r\n        status,\r\n        progress,\r\n        blocksRemaining,\r\n        startBlockNum,\r\n        endBlockNum,\r\n      })\r\n    }\r\n\r\n    fetchProgress()\r\n  }, [currentBlock, contract, releaseBlockNumber, setState])\r\n\r\n  const isActive = state.status === 'live'\r\n  const isFinished = state.status === 'finished'\r\n\r\n  return (\r\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\r\n      <CardBody>\r\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\r\n        <IfoCardProgress progress={state.progress} />\r\n        <IfoCardTime\r\n          isLoading={state.isLoading}\r\n          status={state.status}\r\n          secondsUntilStart={state.secondsUntilStart}\r\n          secondsUntilEnd={state.secondsUntilEnd}\r\n          block={isActive || isFinished ? state.endBlockNum : state.startBlockNum}\r\n        />\r\n        {!account && <UnlockButton fullWidth />}\r\n        {(isActive || isFinished) && (\r\n          <IfoCardContribute\r\n            address={address}\r\n            currency={currency}\r\n            currencyAddress={currencyAddress}\r\n            contract={contract}\r\n            status={state.status}\r\n            raisingAmount={state.raisingAmount}\r\n            tokenDecimals={tokenDecimals}\r\n          />\r\n        )}\r\n        <IfoCardDescription description={description} />\r\n        <IfoCardDetails\r\n          launchDate={launchDate}\r\n          launchTime={launchTime}\r\n          saleAmount={saleAmount}\r\n          raiseAmount={raiseAmount}\r\n          cakeToBurn={cakeToBurn}\r\n          projectSiteUrl={projectSiteUrl}\r\n          raisingAmount={state.raisingAmount}\r\n          totalAmount={state.totalAmount}\r\n        />\r\n      </CardBody>\r\n    </StyledIfoCard>\r\n  )\r\n}\r\n\r\nexport default IfoCard\r\n","import styled from 'styled-components'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\n\r\nconst Title = styled(Heading).attrs({ size: 'lg' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 16px;\r\n`\r\n\r\nexport default Title\r\n","import styled from 'styled-components'\r\n\r\ninterface IfoCardWrapperProps {\r\n  isSingle?: boolean\r\n}\r\n\r\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\r\n  }\r\n`\r\n\r\nIfoCardWrapper.defaultProps = {\r\n  isSingle: false,\r\n}\r\n\r\nexport default IfoCardWrapper\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\r\nimport { ifosConfig } from 'config/constants'\r\nimport useI18n from 'hooks/useI18n'\r\nimport IfoCard from './components/IfoCard'\r\nimport Title from './components/Title'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst LaunchIfoCallout = styled(BaseLayout)`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  margin: 0 auto;\r\n  padding: 32px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n\r\n  & > li {\r\n    line-height: 1.4;\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\n/**\r\n * Note: currently there should be only 1 active IFO at a time\r\n */\r\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\r\n\r\nconst Ifo = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      {activeIfo && (\r\n        <IfoCards isSingle>\r\n          <IfoCard ifo={activeIfo} />\r\n        </IfoCards>\r\n      )}\r\n      <LaunchIfoCallout>\r\n        <div>\r\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\r\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\r\n          <List>\r\n            <li>{TranslateString(999, 'Buy TMDS and BNB tokens')}</li>\r\n            <li>{TranslateString(999, 'Get TMDS-BNB LP tokens by adding TMDS and BNB liquidity')}</li>\r\n          </List>\r\n          <Flex mb=\"16px\">\r\n            <LinkExternal href=\"https://dev.dex.tremendousswap.com/#/swap\" mr=\"16px\">\r\n              {TranslateString(999, 'Buy TMDS')}\r\n            </LinkExternal>\r\n            <LinkExternal href=\"https://dev.dex.tremendousswap.com/#/add/ETH/0xDa5c6c28F7705dD0aCCc0EF1CaB9185ecC494790\">\r\n              {TranslateString(999, 'Get LP tokens')}\r\n            </LinkExternal>\r\n          </Flex>\r\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\r\n          <List>\r\n            <li>{TranslateString(999, 'While the sale is live, commit your TMDS-LP tokens to buy the ITO tokens')}</li>\r\n          </List>\r\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\r\n          <List>\r\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\r\n            <li>{TranslateString(608, 'Done!')}</li>\r\n          </List>\r\n          <Text as=\"div\" pt=\"16px\">\r\n            <Button\r\n              as=\"a\"\r\n              variant=\"secondary\"\r\n              href=\"#\"\r\n            >\r\n              {TranslateString(610, 'Read more')}\r\n            </Button>\r\n          </Text>\r\n        </div>\r\n        <div>\r\n          <Image src=\"/images/ito-tmds.jpg\" alt=\"ifo bunny\" width={436} height={191} responsive mt=\"24px\" mb=\"24px\" />\r\n          <div>\r\n            <Title as=\"h2\">{TranslateString(999, 'Want to launch your own ITO?')}</Title>\r\n            <Text mb={3}>\r\n              {TranslateString(\r\n                999,\r\n                'Launch your project with TremendousSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\r\n              )}\r\n            </Text>\r\n            <Button\r\n              as=\"a\"\r\n              href=\"#\"\r\n              external\r\n            >\r\n              {TranslateString(516, 'Apply to launch')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </LaunchIfoCallout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ifo\r\n","import React from 'react'\r\nimport { ifosConfig } from 'config/constants'\r\nimport { Ifo } from 'config/constants/types'\r\nimport IfoCard from './components/IfoCard'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\r\n\r\nconst PastIfo = () => {\r\n  return (\r\n    <IfoCards>\r\n      {inactiveIfo.map((ifo) => (\r\n        <IfoCard key={ifo.id} ifo={ifo} />\r\n      ))}\r\n    </IfoCards>\r\n  )\r\n}\r\n\r\nexport default PastIfo\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport Container from 'components/layout/Container'\r\nimport Page from 'components/layout/Page'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\nimport { TranslateString } from 'utils/translateTextHelpers'\r\nimport IfoTabButtons from './components/IfoTabButtons'\r\nimport CurrentIfo from './CurrentIfo'\r\nimport PastIfo from './PastIfo'\r\n\r\nconst Ifos = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <Page>\r\n      <Heading as=\"h1\" size=\"xl\" color=\"primary\" mb=\"10px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(999, 'Initial Token Offerings')}\r\n      </Heading>\r\n      <Heading as=\"h1\" size=\"lg\" color=\"secondary\" mb=\"30px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(999, 'Buy new tokens with a brand new token sale model.')}\r\n      </Heading>\r\n      <Container>\r\n        <IfoTabButtons />\r\n        <Route exact path={`${path}`}>\r\n          <CurrentIfo />\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          <PastIfo />\r\n        </Route>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Ifos\r\n"],"sourceRoot":""}